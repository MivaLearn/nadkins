
<div id="fields-key">
	<div><span class="required">Bold</span> = Required</div>
	<div><span class="italic">Italic</span> = Optional</div>
	<mvt:if expr="( g.UI_Exception EQ 1 ) AND ( ( g.Session:cache:last_ui_exception EQ 'order_invalid_info' ) OR ( g.Session:cache:last_ui_exception EQ 'customer_invalid_addinfo' ) OR ( g.Session:cache:last_ui_exception EQ 'customer_invalid_editinfo' ) )">
	<div><span class="red">Red</span> = Invalid</div>
	</mvt:if>
</div>
<div id="login-details">
	<div class="&mvte:global:Login_Row;">
		<label for="Customer_Login" class="required">Username:</label><input type="text" name="Customer_Login" id="Customer_Login" value="&mvte:global:Customer_Login;" class="textfield" autocomplete="off" />
	</div>

	<div class="&mvte:global:PasswordEmail_Row;">
		<label for="Customer_PasswordEmail" class="required">Email Lost Passwords To:</label><input type="text" name="Customer_PasswordEmail" id="Customer_PasswordEmail" value="&mvte:global:Customer_PasswordEmail;" class="textfield" autocomplete="off" />
	</div>

	<mvt:if expr="g.Basket:cust_id">
		<div class="&mvte:global:CurrentPassword_Row;">
			<label for="Customer_CurrentPassword" class="required">Current Password:</label><input type="password" name="Customer_CurrentPassword" id="Customer_CurrentPassword" class="textfield" autocomplete="off" />
		</div>
	</mvt:if>

	<div class="&mvte:global:Password_Row;">
		<label for="Customer_Password" class="required">New Password:</label><input type="password" name="Customer_Password" id="Customer_Password" class="textfield" autocomplete="off" />
	</div>

	<div class="&mvte:global:VerifyPassword_Row;">
		<label for="Customer_VerifyPassword" class="required">Confirm Password:</label><input type="password" name="Customer_VerifyPassword" id="Customer_VerifyPassword" class="textfield" autocomplete="off" />
	</div>
</div>
<div id="ship-to">
	<h2 class="fields-heading">
		Ship To:
		<span id="shipping_controls" class="controls">
			<mvt:if expr="g.Action AND g.shipping_to_show">
			<input name="shipping_to_show" id="shipping_to_show" type="checkbox" value="1" class="checkbox" checked />
			<mvt:else>
			<input name="shipping_to_show" id="shipping_to_show" type="checkbox" value="1" class="checkbox" />
			</mvt:if>
			<label for="shipping_to_show">same as billing</label>
		</span>
	</h2>

	<div id="shipping_fields">
		<mvt:if expr="NOT ISNULL l.settings:customer:validated_ship_addresses">
			<div>
				<div class="validated-address-container">
					<input type="radio" name="Customer_ShipValidatedSelector" class="validated-address-radio" data-mm_address_addr1="&mvte:global:Customer_ShipAddress1;" data-mm_address_addr2="&mvte:global:Customer_ShipAddress2;" data-mm_address_city="&mvte:global:Customer_ShipCity;" data-mm_address_state="&mvte:global:Customer_ShipState;" data-mm_address_stateselect="&mvte:global:Customer_ShipStateSelect;" data-mm_address_zip="&mvte:global:Customer_ShipZip;" data-mm_address_country="&mvte:global:Customer_ShipCountry;" data-mm_address_resdntl="&mvte:global:Customer_ShipResidential;" data-mm_address_edit_new >
					<span class="validated-address"><b>Re-Enter / Modify Address</b></span>
				</div>

				<mvt:foreach iterator="address" array="customer:validated_ship_addresses">
					<div class="validated-address-container">
						<input type="radio" name="Customer_ShipValidatedSelector" class="validated-address-radio" data-mm_address_addr1="&mvte:address:addr1;"
																	  data-mm_address_addr2="&mvte:address:addr2;"
																	  data-mm_address_city="&mvte:address:city;"
																	  data-mm_address_state="&mvte:address:state;"
																	  data-mm_address_zip="&mvte:address:zip;"
																	  data-mm_address_country="&mvte:address:country;"
																	  data-mm_address_resdntl="&mvte:address:resdntl;"
																	  data-mm_address_comp="&mvte:address:comp;" />
						<div class="validated-address">
							<mvt:if expr="l.settings:address:validated">
								<b>Validated Address</b><br />
							<mvt:else>
								<b>Use As Entered</b><br />
							</mvt:if>
							<mvt:if expr="NOT ISNULL l.settings:address:comp"><b>&mvte:address:comp;</b><br></mvt:if>
							<mvt:if expr="NOT ISNULL l.settings:address:addr1">&mvte:address:addr1;<br></mvt:if>
							<mvt:if expr="NOT ISNULL l.settings:address:addr2">&mvte:address:addr2;<br></mvt:if>
							<mvt:if expr="NOT ISNULL l.settings:address:city">&mvte:address:city;</mvt:if><mvt:if expr="( NOT ISNULL l.settings:address:city AND NOT ISNULL l.settings:address:state ) OR ( NOT ISNULL l.settings:address:city AND NOT ISNULL l.settings:address:zip )">, </mvt:if><mvt:if expr="NOT ISNULL l.settings:address:state">&mvte:address:state;</mvt:if><mvt:if expr="NOT ISNULL l.settings:address:state AND NOT ISNULL l.settings:address:zip"> </mvt:if><mvt:if expr="NOT ISNULL l.settings:address:zip">&mvte:address:zip;<br></mvt:if>
							<mvt:if expr="NOT ISNULL l.settings:address:country">&mvte:address:country;<br></mvt:if>
							<mvt:if expr="l.settings:address:resdntl">
								<br />
								Residential Address
							</mvt:if>
						</div>
					</div>
				</mvt:foreach>
			</div>
			<input type="hidden" name="Customer_ShipValidated" value="1" />

			<script type="text/javascript">
				function Validated_Ship_Address_Picker( prefix )
				{
					var self = this;
					var i, forms;

					forms = document.getElementsByTagName( 'form' );

					for ( i = 0; i < forms.length; i++ )
					{
						if ( forms[ i ].elements.hasOwnProperty( 'Action' ) && ( forms[ i ].elements[ 'Action' ].value === 'ICST' || forms[ i ].elements[ 'Action' ].value === 'UCST' ) )
						{
							this.element_form = forms[ i ];
							break;
						}
					}

					if ( !this.element_form ) return;

					this.element_ship_comp               = this.element_form.elements[ prefix + 'ShipCompany' ];
					this.element_ship_addr1              = this.element_form.elements[ prefix + 'ShipAddress1' ];
					this.element_ship_addr2              = this.element_form.elements[ prefix + 'ShipAddress2' ];
					this.element_ship_city               = this.element_form.elements[ prefix + 'ShipCity' ];
					this.element_ship_state              = this.element_form.elements[ prefix + 'ShipState' ];
					this.element_ship_stateselect        = this.element_form.elements[ prefix + 'ShipStateSelect' ];
					this.element_ship_zip                = this.element_form.elements[ prefix + 'ShipZip' ];
					this.element_ship_id                 = this.element_form.elements[ prefix + 'ShipID' ];
					this.element_ship_validated          = this.element_form.elements[ prefix + 'ShipValidated' ];
					this.element_ship_validated_selector = this.element_form.elements[ prefix + 'ShipValidatedSelector' ];

					if ( this.element_ship_validated_selector )
					{
						if ( this.element_ship_validated_selector.length === 1 )
						{
							this.element_ship_validated_selector[ 0 ].checked = true;
						}
						else if ( this.element_ship_validated_selector.length > 1 )
						{
							this.element_ship_validated_selector[ 1 ].checked = true;
							this.Disable_Address_Form_Fields( true );
						}
					}

					AddEvent( this.element_form, 'submit', function( event ) { self.Form_OnSubmit( event ? event : window.event ); } );

					for ( i = 0; i < this.element_ship_validated_selector.length; i++ )
					{
						AddEvent( this.element_ship_validated_selector[ i ], 'change', function( event )
						{
							this.hasAttribute( 'data-mm_address_edit_new' ) ? self.Disable_Address_Form_Fields( false ) : self.Disable_Address_Form_Fields( true );
						} );
					}
				};

				Validated_Ship_Address_Picker.prototype.Disable_Address_Form_Fields = function( disabled )
				{
					if ( this.element_ship_id )           this.element_ship_id.disabled           = disabled;
					if ( this.element_ship_addr1 )        this.element_ship_addr1.disabled        = disabled;
					if ( this.element_ship_addr2 )        this.element_ship_addr2.disabled        = disabled;
					if ( this.element_ship_city )         this.element_ship_city.disabled         = disabled;
					if ( this.element_ship_state )        this.element_ship_state.disabled        = disabled;
					if ( this.element_ship_stateselect )  this.element_ship_stateselect.disabled  = disabled;
					if ( this.element_ship_zip )          this.element_ship_zip.disabled          = disabled;
					if ( this.element_ship_country )      this.element_ship_country.disabled      = disabled;
					if ( this.element_ship_comp )         this.element_ship_comp.disabled         = disabled;
				}

				Validated_Ship_Address_Picker.prototype.Form_OnSubmit = function( e )
				{
					var i, selected_radio_shipping, address_edit_new;

					for ( i = 0; i < this.element_ship_validated_selector.length; i++ )
					{
						if ( this.element_ship_validated_selector[ i ].checked )
						{
							selected_radio_shipping = this.element_ship_validated_selector[ i ];
							break;
						}
					}

					if ( !selected_radio_shipping )
					{
						this.onError( 'Please select a validated address.' );
						return eventPreventDefault( e );
					}

					address_edit_new_shipping = selected_radio_shipping.hasAttribute( 'data-mm_address_edit_new' );

					if ( !address_edit_new_shipping )
					{
						if ( this.element_ship_addr1 )
						{
							if ( selected_radio_shipping.hasAttribute( 'data-mm_address_addr1' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_addr1' ) === 'string' )
							{
								this.element_ship_addr1.value = selected_radio_shipping.getAttribute( 'data-mm_address_addr1' );
							}
							else
							{
								this.element_ship_addr1.value = '';
							}
						}

						if ( this.element_ship_addr2 )
						{
							if ( selected_radio_shipping.hasAttribute( 'data-mm_address_addr2' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_addr2' ) === 'string' )
							{
								this.element_ship_addr2.value = selected_radio_shipping.getAttribute( 'data-mm_address_addr2' );
							}
							else
							{
								this.element_ship_addr2.value = '';
							}
						}

						if ( this.element_ship_city )
						{
							if ( selected_radio_shipping.hasAttribute( 'data-mm_address_city' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_city' ) === 'string' )
							{
								this.element_ship_city.value = selected_radio_shipping.getAttribute( 'data-mm_address_city' );
							}
							else
							{
								this.element_ship_city.value = '';
							}
						}

						if ( this.element_ship_state )
						{
							if ( selected_radio_shipping.hasAttribute( 'data-mm_address_state' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_state' ) === 'string' )
							{
								this.element_ship_state.value = selected_radio_shipping.getAttribute( 'data-mm_address_state' );
							}
							else
							{
								this.element_ship_state.value = '';
							}
						}

						if ( this.element_ship_stateselect )
						{
							if ( selected_radio_shipping.hasAttribute( 'data-mm_address_stateselect' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_stateselect' ) === 'string' )
							{
								this.element_ship_stateselect.value = selected_radio_shipping.getAttribute( 'data-mm_address_stateselect' );
							}
							else
							{
								this.element_ship_stateselect.value = '';
							}
						}

						if ( this.element_ship_zip )
						{
							if ( selected_radio_shipping.hasAttribute( 'data-mm_address_zip' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_zip' ) === 'string' )
							{
								this.element_ship_zip.value = selected_radio_shipping.getAttribute( 'data-mm_address_zip' );
							}
							else
							{
								this.element_ship_zip.value = '';
							}
						}

						if ( this.element_ship_country )
						{
							if ( selected_radio_shipping.hasAttribute( 'data-mm_address_country' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_country' ) === 'string' )
							{
								this.element_ship_country.value = selected_radio_shipping.getAttribute( 'data-mm_address_country' );
							}
							else
							{
								this.element_ship_country.value = '';
							}
						}

						if ( this.element_ship_comp )
						{
							if ( selected_radio_shipping.hasAttribute( 'data-mm_address_comp' ) && typeof selected_radio_shipping.getAttribute( 'data-mm_address_comp' ) === 'string' )
							{
								this.element_ship_comp.value = selected_radio_shipping.getAttribute( 'data-mm_address_comp' );
							}
							else
							{
								this.element_ship_comp.value = '';
							}
						}
					}
					else
					{
						this.element_ship_validated.value = 0;
					}

					// disable "radio" element so it doesn't send in the form
					selected_radio_shipping.disabled = true;
					this.Disable_Address_Form_Fields( false );

					return true;
				};

				Validated_Ship_Address_Picker.prototype.onError = function( message)
				{
					alert( message );
				};

				(function( obj, eventType, fn )
				{
					if ( obj.addEventListener )
					{
						obj.addEventListener( eventType, fn, false );
					}
					else if ( obj.attachEvent )
					{
						obj.attachEvent( 'on' + eventType, fn );
					}
				})( window, 'load', function()
				{
					window.validated_ship_address_picker = new Validated_Ship_Address_Picker( '&mvtj:customer:prefix;' );
				} );
			</script>
		</mvt:if>

		<mvt:if expr="g.Basket:cust_id AND g.Customer_Session_Verified">
			<div class="&mvte:global:ShipID_Row;">
				<label class="required" for="Customer_ShipID">Saved Address:</label>
				<select name="Customer_ShipID" id="shipping_selector">
					<option value="-1">&lt;New&gt;</option>
					<mvt:foreach iterator="address" array="customer:addresses">
						<mvt:if expr="toupper( l.settings:address:fname ) EQ toupper( g.Customer_ShipFirstName ) AND
										 toupper( l.settings:address:lname ) EQ toupper( g.Customer_ShipLastName ) AND
										 toupper( l.settings:address:email ) EQ toupper( g.Customer_ShipEmail ) AND
										 toupper( l.settings:address:comp ) EQ toupper( g.Customer_ShipCompany ) AND
										 toupper( l.settings:address:phone ) EQ toupper( g.Customer_ShipPhone ) AND
										 toupper( l.settings:address:fax ) EQ toupper( g.Customer_ShipFax ) AND
										 toupper( l.settings:address:addr1 ) EQ toupper( g.Customer_ShipAddress1 ) AND
										 toupper( l.settings:address:addr2 ) EQ toupper( g.Customer_ShipAddress2 ) AND
										 toupper( l.settings:address:city ) EQ toupper( g.Customer_ShipCity ) AND
										 (
										 	( ( NOT ISNULL g.Customer_ShipStateSelect ) AND ( toupper( l.settings:address:state ) EQ toupper( g.Customer_ShipStateSelect ) ) ) OR
										 	( ( ISNULL g.Customer_ShipStateSelect ) AND ( toupper( l.settings:address:state ) EQ toupper( g.Customer_ShipState ) ) )
										 ) AND
										 toupper( l.settings:address:zip ) EQ toupper( g.Customer_ShipZip ) AND
										 toupper( l.settings:address:cntry ) EQ toupper( g.Customer_ShipCountry )">
							<option value="&mvte:address:id;" selected>&mvte:address:descrip;</option>
						<mvt:else>
							<option value="&mvte:address:id;">&mvte:address:descrip;</option>
						</mvt:if>
					</mvt:foreach>
				</select>
			</div>
		</mvt:if>
		<div class="&mvte:global:ShipFirstName_Row;">
			<label class="required" for="Customer_ShipFirstName">First Name:</label>
			<input type="text" name="Customer_ShipFirstName" id="Customer_ShipFirstName" value="&mvte:global:Customer_ShipFirstName;" class="textfield" />
		</div>
		<div class="&mvte:global:ShipLastName_Row;">
			<label class="required" for="Customer_ShipLastName">Last Name:</label>
			<input type="text" name="Customer_ShipLastName" id="Customer_ShipLastName" value="&mvte:global:Customer_ShipLastName;" class="textfield" />
		</div>
		<div class="&mvte:global:ShipEmail_Row;">
			<label class="required" for="Customer_ShipEmail">Email Address:</label>
			<input type="text" name="Customer_ShipEmail" id="Customer_ShipEmail" value="&mvte:global:Customer_ShipEmail;" class="textfield" />
		</div>
		<div class="&mvte:global:ShipPhone_Row;">
			<label class="required" for="Customer_ShipPhone">Phone Number:</label>
			<input type="text" name="Customer_ShipPhone" id="Customer_ShipPhone" value="&mvte:global:Customer_ShipPhone;" class="textfield" />
		</div>
		<div class="&mvte:global:ShipFax_Row;">
			<label class="italic" for="Customer_ShipFax">Fax Number:</label>
			<input type="text" name="Customer_ShipFax" id="Customer_ShipFax" value="&mvte:global:Customer_ShipFax;" class="textfield" />
		</div>
		<div class="&mvte:global:ShipCompany_Row;">
			<label class="italic" for="Customer_ShipCompany">Company:</label>
			<input type="text" name="Customer_ShipCompany" id="Customer_ShipCompany" value="&mvte:global:Customer_ShipCompany;" class="textfield" />
		</div>
		<div class="&mvte:global:ShipAddress1_Row;">
			<label class="required" for="Customer_ShipAddress1">Address:</label>
			<input type="text" name="Customer_ShipAddress1" id="Customer_ShipAddress1" value="&mvte:global:Customer_ShipAddress1;" class="textfield" />
		</div>
		<div class="&mvte:global:ShipAddress2_Row;">
			<label class="italic" for="Customer_ShipAddress2">Address 2:</label>
			<input type="text" name="Customer_ShipAddress2" id="Customer_ShipAddress2" value="&mvte:global:Customer_ShipAddress2;" class="textfield" />
		</div>
		<div class="&mvte:global:ShipCity_Row;">
			<label class="required" for="Customer_ShipCity">City:</label>
			<input type="text" name="Customer_ShipCity" id="Customer_ShipCity" value="&mvte:global:Customer_ShipCity;" class="textfield" />
		</div>
		<mvt:if expr="g.States_Empty">
			<div class="&mvte:global:ShipState_Row;">
				<label class="required" for="Customer_ShipState">State/Province:</label>
				<input type="text" name="Customer_ShipState" id="Customer_ShipState" value="&mvte:global:Customer_ShipState;" class="textfield" />
			</div>
		<mvt:else>
			<div class="&mvte:global:ShipState_Row;">
				<label class="required" for="Customer_ShipStateSelect">State/Province:</label>
				<mvt:item name="states" param="Customer_ShipStateSelect" />
			</div>

			<div class="&mvte:global:ShipState_Row;">
				<label class="italic" for="Customer_ShipState">Other State/Province:</label>
				<input type="text" name="Customer_ShipState" id="Customer_ShipState" value="&mvte:global:Customer_ShipState;" class="textfield">
			</div>
		</mvt:if>
		<div class="&mvte:global:ShipZip_Row;">
			<label class="required" for="Customer_ShipZip">Zip/Postal Code:</label>
			<input type="text" name="Customer_ShipZip" id="Customer_ShipZip" value="&mvte:global:Customer_ShipZip;" class="textfield" />
		</div>
		<div class="&mvte:global:ShipCountry_Row;">
			<label class="required" for="Customer_ShipCountry">Country:</label>
			<mvt:item name="countries" param="Customer_ShipCountry" />
		</div>
	</div>
</div>
<div id="bill-to">
	<h2 class="fields-heading">
		Bill To:
		<span id="billing_controls" class="controls">
			<mvt:if expr="g.Action AND g.billing_to_show">
			<input name="billing_to_show" id="billing_to_show" type="checkbox" value="1" class="checkbox" checked />
			<mvt:else>
			<input name="billing_to_show" id="billing_to_show" type="checkbox" value="1" class="checkbox" />
			</mvt:if>
			<label for="billing_to_show">same as shipping</label>
		</span>
	</h2>
	<div id="billing_fields">
		<mvt:if expr="NOT ISNULL l.settings:customer:validated_bill_addresses">
			<div>
				<div class="validated-address-container">
					<input type="radio" name="Customer_BillValidatedSelector" class="validated-address-radio" data-mm_address_addr1="&mvte:global:Customer_BillAddress1;" data-mm_address_addr2="&mvte:global:Customer_BillAddress2;" data-mm_address_city="&mvte:global:Customer_BillCity;" data-mm_address_state="&mvte:global:Customer_BillState;" data-mm_address_stateselect="&mvte:global:Customer_BillStateSelect;" data-mm_address_zip="&mvte:global:Customer_BillZip;" data-mm_address_country="&mvte:global:Customer_BillCountry;" data-mm_address_edit_new >
					<span class="validated-address"><b>Re-Enter / Modify Address</b></span>
				</div>

				<mvt:foreach iterator="address" array="customer:validated_bill_addresses">
					<div class="validated-address-container">
						<input type="radio" name="Customer_BillValidatedSelector" class="validated-address-radio" data-mm_address_addr1="&mvte:address:addr1;"
																	  data-mm_address_addr2="&mvte:address:addr2;"
																	  data-mm_address_city="&mvte:address:city;"
																	  data-mm_address_state="&mvte:address:state;"
																	  data-mm_address_zip="&mvte:address:zip;"
																	  data-mm_address_country="&mvte:address:country;"
																	  data-mm_address_comp="&mvte:address:comp;" />
						<div class="validated-address">
							<mvt:if expr="l.settings:address:validated">
								<b>Validated Address</b><br />
							<mvt:else>
								<b>Use As Entered</b><br />
							</mvt:if>
							<mvt:if expr="NOT ISNULL l.settings:address:comp"><b>&mvte:address:comp;</b><br></mvt:if>
							<mvt:if expr="NOT ISNULL l.settings:address:addr1">&mvte:address:addr1;<br></mvt:if>
							<mvt:if expr="NOT ISNULL l.settings:address:addr2">&mvte:address:addr2;<br></mvt:if>
							<mvt:if expr="NOT ISNULL l.settings:address:city">&mvte:address:city;</mvt:if><mvt:if expr="( NOT ISNULL l.settings:address:city AND NOT ISNULL l.settings:address:state ) OR ( NOT ISNULL l.settings:address:city AND NOT ISNULL l.settings:address:zip )">, </mvt:if><mvt:if expr="NOT ISNULL l.settings:address:state">&mvte:address:state;</mvt:if><mvt:if expr="NOT ISNULL l.settings:address:state AND NOT ISNULL l.settings:address:zip"> </mvt:if><mvt:if expr="NOT ISNULL l.settings:address:zip">&mvte:address:zip;<br></mvt:if>
							<mvt:if expr="NOT ISNULL l.settings:address:country">&mvte:address:country;<br></mvt:if>
						</div>
					</div>
				</mvt:foreach>
			</div>
			<input type="hidden" name="Customer_BillValidated" value="1" />

			<script type="text/javascript">
				function Validated_Bill_Address_Picker( prefix )
				{
					var self = this;
					var i, forms;

					forms = document.getElementsByTagName( 'form' );

					for ( i = 0; i < forms.length; i++ )
					{
						if ( forms[ i ].elements.hasOwnProperty( 'Action' ) && ( forms[ i ].elements[ 'Action' ].value === 'ICST' || forms[ i ].elements[ 'Action' ].value === 'UCST' ) )
						{
							this.element_form = forms[ i ];
							break;
						}
					}

					if ( !this.element_form ) return;

					this.element_bill_comp               = this.element_form.elements[ prefix + 'BillCompany' ];
					this.element_bill_addr1              = this.element_form.elements[ prefix + 'BillAddress1' ];
					this.element_bill_addr2              = this.element_form.elements[ prefix + 'BillAddress2' ];
					this.element_bill_city               = this.element_form.elements[ prefix + 'BillCity' ];
					this.element_bill_state              = this.element_form.elements[ prefix + 'BillState' ];
					this.element_bill_stateselect        = this.element_form.elements[ prefix + 'BillStateSelect' ];
					this.element_bill_zip                = this.element_form.elements[ prefix + 'BillZip' ];
					this.element_bill_id                 = this.element_form.elements[ prefix + 'BillID' ];
					this.element_bill_validated          = this.element_form.elements[ prefix + 'BillValidated' ];
					this.element_bill_validated_selector = this.element_form.elements[ prefix + 'BillValidatedSelector' ];
					this.element_billing_to_show         = this.element_form.elements[ 'billing_to_show' ];

					if ( this.element_bill_validated_selector )
					{
						if ( this.element_bill_validated_selector.length === 1 )
						{
							this.element_bill_validated_selector[ 0 ].checked = true;
						}
						else if ( this.element_bill_validated_selector.length > 1 )
						{
							this.element_bill_validated_selector[ 1 ].checked = true;
							this.Disable_Address_Form_Fields( true );
						}
					}

					AddEvent( this.element_form, 'submit', function( event ) { self.Form_OnSubmit( event ? event : window.event ); } );

					for ( i = 0; i < this.element_bill_validated_selector.length; i++ )
					{
						AddEvent( this.element_bill_validated_selector[ i ], 'change', function( event )
						{
							this.hasAttribute( 'data-mm_address_edit_new' ) ? self.Disable_Address_Form_Fields( false ) : self.Disable_Address_Form_Fields( true );
						} );
					}
				};

				Validated_Bill_Address_Picker.prototype.Disable_Address_Form_Fields = function( disabled )
				{
					if ( this.element_bill_id )           this.element_bill_id.disabled           = disabled;
					if ( this.element_bill_addr1 )        this.element_bill_addr1.disabled        = disabled;
					if ( this.element_bill_addr2 )        this.element_bill_addr2.disabled        = disabled;
					if ( this.element_bill_city )         this.element_bill_city.disabled         = disabled;
					if ( this.element_bill_state )        this.element_bill_state.disabled        = disabled;
					if ( this.element_bill_stateselect )  this.element_bill_stateselect.disabled  = disabled;
					if ( this.element_bill_zip )          this.element_bill_zip.disabled          = disabled;
					if ( this.element_bill_country )      this.element_bill_country.disabled      = disabled;
				}

				Validated_Bill_Address_Picker.prototype.Form_OnSubmit = function( e )
				{
					var i, selected_radio_billing, address_edit_new;
					if ( this.element_billing_to_show.checked )
					{
						this.Disable_Address_Form_Fields( false );
						return;
					}
					

					for ( i = 0; i < this.element_bill_validated_selector.length; i++ )
					{
						if ( this.element_bill_validated_selector[ i ].checked )
						{
							selected_radio_billing = this.element_bill_validated_selector[ i ];
							break;
						}
					}

					if ( !selected_radio_billing )
					{
						this.onError( 'Please select a validated address.' );
						return eventPreventDefault( e );
					}

					address_edit_new_billing  = selected_radio_billing.hasAttribute( 'data-mm_address_edit_new' );

					if ( !address_edit_new_billing )
					{
						if ( this.element_bill_addr1 )
						{
							if ( selected_radio_billing.hasAttribute( 'data-mm_address_addr1' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_addr1' ) === 'string' )
							{
								this.element_bill_addr1.value = selected_radio_billing.getAttribute( 'data-mm_address_addr1' );
							}
							else
							{
								this.element_bill_addr1.value = '';
							}
						}

						if ( this.element_bill_addr2 )
						{
							if ( selected_radio_billing.hasAttribute( 'data-mm_address_addr2' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_addr2' ) === 'string' )
							{
								this.element_bill_addr2.value = selected_radio_billing.getAttribute( 'data-mm_address_addr2' );
							}
							else
							{
								this.element_bill_addr2.value = '';
							}
						}

						if ( this.element_bill_city )
						{
							if ( selected_radio_billing.hasAttribute( 'data-mm_address_city' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_city' ) === 'string' )
							{
								this.element_bill_city.value = selected_radio_billing.getAttribute( 'data-mm_address_city' );
							}
							else
							{
								this.element_bill_city.value = '';
							}
						}

						if ( this.element_bill_state )
						{
							if ( selected_radio_billing.hasAttribute( 'data-mm_address_state' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_state' ) === 'string' )
							{
								this.element_bill_state.value = selected_radio_billing.getAttribute( 'data-mm_address_state' );
							}
							else
							{
								this.element_bill_state.value = '';
							}
						}

						if ( this.element_bill_stateselect )
						{
							if ( selected_radio_billing.hasAttribute( 'data-mm_address_stateselect' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_stateselect' ) === 'string' )
							{
								this.element_bill_stateselect.value = selected_radio_billing.getAttribute( 'data-mm_address_stateselect' );
							}
							else
							{
								this.element_bill_stateselect.value = '';
							}
						}

						if ( this.element_bill_zip )
						{
							if ( selected_radio_billing.hasAttribute( 'data-mm_address_zip' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_zip' ) === 'string' )
							{
								this.element_bill_zip.value = selected_radio_billing.getAttribute( 'data-mm_address_zip' );
							}
							else
							{
								this.element_bill_zip.value = '';
							}
						}

						if ( this.element_bill_country )
						{
							if ( selected_radio_billing.hasAttribute( 'data-mm_address_country' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_country' ) === 'string' )
							{
								this.element_bill_country.value = selected_radio_billing.getAttribute( 'data-mm_address_country' );
							}
							else
							{
								this.element_bill_country.value = '';
							}
						}

						if ( this.element_bill_comp )
						{
							if ( selected_radio_billing.hasAttribute( 'data-mm_address_comp' ) && typeof selected_radio_billing.getAttribute( 'data-mm_address_comp' ) === 'string' )
							{
								this.element_bill_comp.value = selected_radio_billing.getAttribute( 'data-mm_address_comp' );
							}
							else
							{
								this.element_bill_comp.value = '';
							}
						}
					}
					else
					{
						this.element_bill_validated.value = 0;
					}

					// disable "radio" element so it doesn't send in the form
					selected_radio_billing.disabled  = true;
					this.Disable_Address_Form_Fields( false );

					return true;
				};

				Validated_Bill_Address_Picker.prototype.onError = function( message )
				{
					alert( message );
				};

				(function( obj, eventType, fn )
				{
					if ( obj.addEventListener )
					{
						obj.addEventListener( eventType, fn, false );
					}
					else if ( obj.attachEvent )
					{
						obj.attachEvent( 'on' + eventType, fn );
					}
				})( window, 'load', function()
				{
					window.validated_bill_address_picker = new Validated_Bill_Address_Picker( '&mvtj:customer:prefix;' );
				} );
			</script>
		</mvt:if>

		<mvt:if expr="g.Basket:cust_id AND g.Customer_Session_Verified">
			<div class="&mvte:global:BillID_Row;">
				<label class="required" for="Customer_BillID">Saved Address:</label>
				<select name="Customer_BillID" id="billing_selector">
					<option value="-1">&lt;New&gt;</option>
					<mvt:foreach iterator="address" array="customer:addresses">
						<mvt:if expr="toupper( l.settings:address:fname ) EQ toupper( g.Customer_BillFirstName ) AND
										 toupper( l.settings:address:lname ) EQ toupper( g.Customer_BillLastName ) AND
										 toupper( l.settings:address:email ) EQ toupper( g.Customer_BillEmail ) AND
										 toupper( l.settings:address:comp ) EQ toupper( g.Customer_BillCompany ) AND
										 toupper( l.settings:address:phone ) EQ toupper( g.Customer_BillPhone ) AND
										 toupper( l.settings:address:fax ) EQ toupper( g.Customer_BillFax ) AND
										 toupper( l.settings:address:addr1 ) EQ toupper( g.Customer_BillAddress1 ) AND
										 toupper( l.settings:address:addr2 ) EQ toupper( g.Customer_BillAddress2 ) AND
										 toupper( l.settings:address:city ) EQ toupper( g.Customer_BillCity ) AND
										 (
										 	( ( NOT ISNULL g.Customer_BillStateSelect ) AND ( toupper( l.settings:address:state ) EQ toupper( g.Customer_BillStateSelect ) ) ) OR
										 	( ( ISNULL g.Customer_BillStateSelect ) AND ( toupper( l.settings:address:state ) EQ toupper( g.Customer_BillState ) ) )
										 ) AND
										 toupper( l.settings:address:zip ) EQ toupper( g.Customer_BillZip ) AND
										 toupper( l.settings:address:cntry ) EQ toupper( g.Customer_BillCountry )">
							<option value="&mvte:address:id;" selected>&mvte:address:descrip;</option>
						<mvt:else>
							<option value="&mvte:address:id;">&mvte:address:descrip;</option>
						</mvt:if>
					</mvt:foreach>
				</select>
			</div>
		</mvt:if>
		<div class="&mvte:global:BillFirstName_Row;">
			<label class="required" for="Customer_BillFirstName">First Name:</label>
			<input type="text" name="Customer_BillFirstName" id="Customer_BillFirstName" value="&mvte:global:Customer_BillFirstName;" class="textfield" />
		</div>
		<div class="&mvte:global:BillLastName_Row;">
			<label class="required" for="Customer_BillLastName">Last Name:</label>
			<input type="text" name="Customer_BillLastName" id="Customer_BillLastName" value="&mvte:global:Customer_BillLastName;" class="textfield" />
		</div>
		<div class="&mvte:global:BillEmail_Row;">
			<label class="required" for="Customer_BillEmail">Email Address:</label>
			<input type="text" name="Customer_BillEmail" id="Customer_BillEmail" value="&mvte:global:Customer_BillEmail;" class="textfield" />
		</div>
		<div class="&mvte:global:BillPhone_Row;">
			<label class="required" for="Customer_BillPhone">Phone Number:</label>
			<input type="text" name="Customer_BillPhone" id="Customer_BillPhone" value="&mvte:global:Customer_BillPhone;" class="textfield" />
		</div>
		<div class="&mvte:global:BillFax_Row;">
			<label class="italic" for="Customer_BillFax">Fax Number:</label>
			<input type="text" name="Customer_BillFax" id="Customer_BillFax" value="&mvte:global:Customer_BillFax;" class="textfield" />
		</div>
		<div class="&mvte:global:BillCompany_Row;">
			<label class="italic" for="Customer_BillCompany">Company:</label>
			<input type="text" name="Customer_BillCompany" id="Customer_BillCompany" value="&mvte:global:Customer_BillCompany;" class="textfield" />
		</div>
		<div class="&mvte:global:BillAddress1_Row;">
			<label class="required" for="Customer_BillAddress1">Address:</label>
			<input type="text" name="Customer_BillAddress1" id="Customer_BillAddress1" value="&mvte:global:Customer_BillAddress1;" class="textfield" />
		</div>
		<div class="&mvte:global:BillAddress2_Row;">
			<label class="italic" for="Customer_BillAddress2">Address 2:</label>
			<input type="text" name="Customer_BillAddress2" id="Customer_BillAddress2" value="&mvte:global:Customer_BillAddress2;" class="textfield" />
		</div>
		<div class="&mvte:global:BillCity_Row;">
			<label class="required" for="Customer_BillCity">City:</label>
			<input type="text" name="Customer_BillCity" id="Customer_BillCity" value="&mvte:global:Customer_BillCity;" class="textfield" />
		</div>
		<mvt:if expr="g.States_Empty">
			<div class="&mvte:global:BillState_Row;">
				<label class="required" for="Customer_BillState">State/Province:</label>
				<input type="text" name="Customer_BillState" id="Customer_BillState" value="&mvte:global:Customer_BillState;" class="textfield" />
			</div>
		<mvt:else>
			<div class="&mvte:global:BillState_Row;">
				<label class="required" for="Customer_BillStateSelect">State/Province:</label>
				<mvt:item name="states" param="Customer_BillStateSelect" />
			</div>

			<div class="&mvte:global:BillState_Row;">
				<label class="italic" for="Customer_BillState">Other State/Province:</label>
				<input type="text" name="Customer_BillState" id="Customer_BillState" value="&mvte:global:Customer_BillState;" class="textfield" />
			</div>
		</mvt:if>
		<div class="&mvte:global:BillZip_Row;">
			<label class="required" for="Customer_BillZip">Zip/Postal Code:</label>
			<input type="text" name="Customer_BillZip" id="Customer_BillZip" value="&mvte:global:Customer_BillZip;" class="textfield" />
		</div>
		<div class="&mvt:global:BillCountry_Row;">
			<label class="required" for="Customer_BillCountry">Country:</label>
			<mvt:item name="countries" param="Customer_BillCountry" />
		</div>
	</div>
</div>
<mvt:if expr="l.settings:customer:match">
<script>
<mvt:if expr="l.settings:customer:primaddr EQ 'shipping'">
document.getElementById( 'billing_to_show' ).checked = true;
<mvt:elseif expr="l.settings:customer:primaddr EQ 'billing'">
document.getElementById( 'shipping_to_show' ).checked = true;
</mvt:if>
</script>
</mvt:if>

<mvt:if expr="g.Basket:cust_id AND g.Customer_Session_Verified AND l.settings:customer:address_count">
	<script type="text/javascript">
		var MvCustomerAddresses = [];

		<mvt:foreach iterator="address" array="customer:addresses">
			MvCustomerAddresses[ <mvt:eval expr="int( l.settings:address:id )" /> ] = {
				"id":		<mvt:eval expr="int( l.settings:address:id )" />,
				"cust_id":	<mvt:eval expr="int( l.settings:address:cust_id )" />,
				"descrip":	"&mvtj:address:descrip;",
				"fname":	"&mvtj:address:fname;",
				"lname":	"&mvtj:address:lname;",
				"email":	"&mvtj:address:email;",
				"comp":		"&mvtj:address:comp;",
				"phone":	"&mvtj:address:phone;",
				"fax":		"&mvtj:address:fax;",
				"addr1":	"&mvtj:address:addr1;",
				"addr2":	"&mvtj:address:addr2;",
				"city":		"&mvtj:address:city;",
				"state":	"&mvtj:address:state;",
				"zip":		"&mvtj:address:zip;",
				"cntry":	"&mvtj:address:cntry;",
				"resdntl":	<mvt:if expr="l.settings:address:resdntl">true<mvt:else>false</mvt:if>
			};
		</mvt:foreach>
	</script>
</mvt:if>

<script src="&mvte:global:clientside_url;Store_Code=&mvta:store:code;&amp;Filename=ToggleDetails.js&amp;Primaddr=shipping&amp;Shipping=D&amp;Billing=O"></script>